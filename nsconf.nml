!***********************************************************************
! NAVIER STOKES SOLVER - FINITE DIFFERENCES
!***********************************************************************
!
!brief    USER VARIABLE DECLARATIONS FOR THE SOLVER
!
!history  Sergio Castiblanco
!+        13/01/2021
!+        Translation for original Matlab implementation
!         (./matlab/NS_main.m)
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!
&NSCONF

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! PHYSICAL VARIABLES
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!  KINEMATIC VISCOSITY (ISU) (DOUBLE)
NU = 0.001D0

!
!  WATER DENSITY (ISU) (DOUBLE)
RHO = 1000.0D0

!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! SPACE DISCRETIZATION VARIABLES
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!  NUMBER OF NODES IN DIRECTIONS X AND Y (INTEGER)
!  RECOMENDED MINIMUM NX=11, NY=11 (IF LESS ACCURACY IS COMPROMISED)
NX = 81
NY = 81

!
!  DIMENSIONS OF THE DOMAIN (ISU) (DOUBLE)
XMIN = 0.0D0
XMAX = 1.0D0
YMIN = 0.0D0
YMAX = 1.0D0

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!  TIME DISCRETIZATION
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!  DESIRED COURANT NUMBER (DOUBLE) (<= 1.0)
CFL = 0.95D0

!
! INITIAL TIME (DOUBLE)
TO = 0.0D0

!
! FINAL TIME (DOUBLE)
TF = 30.0D0

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!  SOLVER OPTIONS
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! DIFUSSION SOLVER
!-----------------------------------------------------------------------
! DIFUSSION SOLVER IS CONJUGATE GRADIENT (CG), SINCE MATRIX IS SYMMETRIC
!
! SELECT THE PRECONDITIONING TECHNIQUE FOR CG SOLVER (INTEGER)
! 0: NO PRECONDITIONING
! 1: DIAGONAL PRECONDITIONING
! 2: ABSOLUTE DIAGONAL PRECONDITIONING
! 3: SSOR PRECONDITIONING
! 4: ILU(0) PRECONDITIONING (THIS OPTION == LU DIRECT SOLVER)
PCD = 4

!
! OPTION FOR DIFUSSION PRECONDITIONING (DOUBLE)
! - IF SSOR PRECONDITIONING, PUT SSOR COEFFICIENT (0,2)
!      IF WSSORD = 1.0 -> SYMMETRYC GAUSS-SEIDEL PRECONDITIONER
WSSORD = 1.0

!
! TOLERANCE FOR THE RESIDUAL FOR THE CONJUGATE GRADIENT METHOD
! DIFFUSION STEP (DOUBLE)
TOLCG = 1E-8

!
! MAXIMUM NUMBER OF ITERATIONS FOR CG SOLVER, DIFFUSION STEP (INTEGER)
MNITERD = 50

!-----------------------------------------------------------------------
! FIND MINIMUM SINGULAR VECTOR FOR REGULARIZATION (DONE JUST ONCE)
!-----------------------------------------------------------------------
!
! SOLVER FOR FINDING MINIMUM SINGULAR VECTOR FOR REGULARIZATION OF
! POISSON EQUATION (INTEGER)
! 1: CONJUGATE GRADIENT (CG, MAY NOT CONVERGE)
! 2: BICONJUGATE GRADIENT STABILIZED (BICGSTAB)
! 3: GENERALIZED MINIMAL RESIDUAL (GMRES)
! (RECOMENDED, SOLSING = 2 (BICGSTAB))
SOLSING = 2

!
! PRECONDITIONING TECHNIQUE FOR SINGULAR VECTOR SOLVER (INTEGER)
! 0: NO PRECONDITIONING
! 1: DIAGONAL PRECONDITIONING
! 2: ABSOLUTE DIAGONAL PRECONDITIONING
! 3: SSOR PRECONDITIONING
! 4: ILU(0) PRECONDITIONING
! RECOMENDED VALUES:
! (IF SOLSING == 1, PCS = 0)
! (IF SOLSING == 2, PCS = 0)
PCS = 0

!
! KRYLOV SUBSPACE SIZE IF SOLSING == 3 (GMRES) (INTEGER)
! KSSS TO BIG DEMANDS WAY MORE COMPUTATION TIME
! (RECOMENDED VALUE, KSSS = 1)
KSSS = 1

!
! OPTION FOR SINGULAR-VECTOR PRECONDITIONING (DOUBLE)
! - IF SSOR PRECONDITIONING, PUT SSOR COEFFICIENT (0,2)
!      IF WSSORSING = 1.0 -> SYMMETRYC GAUSS-SEIDEL PRECONDITIONER
WSSORS = 1.0

!
! TOLERANCE TO FIND MINIMUM SINGULAR VECTOR RELATED, REGULARIZATION
! PURPOSES (DOUBLE)
TOLSING = 1E-12

!
! NUMBER OF ITERATIONS FOR INVERSE POWER METHOD, TO FIND MINIMUM
! SINGULAR VECTOR RELATED (INTEGER) (USUALLY JUST ONE IS ENOUGH)
SING = 1

!
! MAXIMUM NUMBER OF ITERATIONS FOR INVERSE POWER METHOD SOLVER (INTEGER)
! (IF SOLSING == 1, OR, SOLSING == 2, MNITERM=400 IS ENOUGH)
MNITERM = 400

! CONVERGENCE IS ENSURED IF RECOMENDED VALUES ARE USED.
! OTHERWISE: OTHER COMBINATIONS OF PARAMETERS GET THE SOLVER TO DIVERGE
! PREFERABLY USE BICGSTAB OR GMRES, SINCE SYSTEM IS NOT-SYMMETRIC
! THE WAY BEST OPTION IS: BICGSTAB WITH ILU(0) PRECONDITIONING
!-----------------------------------------------------------------------
! POISSON SOLVER
!-----------------------------------------------------------------------
!
! POISSON EQUATION SOLVER (INTEGER)
! 1: SYMMETRIC OVER-RELAXATION (SOR)
! 2: BICONJUGATE GRADIENT STABILIZED (BICGSTAB)
! 3: GENERALIZED MINIMAL RESIDUAL (GMRES)
SOLP = 2  

!
! PRECONDITIONING TECHNIQUE FOR POISSON SOLVER (INTEGER)
! 0: NO PRECONDITIONING
! 1: DIAGONAL PRECONDITIONING
! 2: ABSOLUTE DIAGONAL PRECONDITIONING
! 3: SSOR PRECONDITIONING
! 4: ILU(0) PRECONDITIONING
PCP = 3

!
! KRYLOV SUBSPACE SIZE IF SOLP == 3 (GMRES) (INTEGER)
KSSP = 4

!
! OPTION FOR SINGULAR-VECTOR PRECONDITIONING (DOUBLE)
! - IF SSOR PRECONDITIONING (PCP==3), PUT SSOR COEFFICIENT (0,2)
!      IF WSSORP = 1.0 -> SYMMETRYC GAUSS-SEIDEL PRECONDITIONER
WSSORP = 1.2

!
! TOLERANCE FOR THE RESIDUAL FOR POISSON EQUATION SOLVER (DOUBLE)
TOLSOR = 1E-6

!
! MAXIMUM NUMBER OF ITERATIONS FOR SOR POISSON EQUATION SOLVER (INTEGER)
MNITERS = 1000

! WARNING!: 
! - THE GIVEN TOLERANCE TO FIND MINIMUM SINGULAR VECTOR (TOLSING)  WILL 
!   BE FORCED TO BE AT MOST 1E-8 IF YOU GIVE A GREATER VALUE
! - THE GIVEN TOLERANCE FOR CG AND SOR SOLVERS (TOLCG AND TOLSOR
!   RESPECTIVELY) WILL BE FORCED TO BE AT MOST:
!   MIN((DX**2)/2,(DY**2)/2)
!   TO PRESERVE O(H**2) ACCURACY OF THE SCHEMES, IF YOU GIVE GREATER
!   VALUES
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! VALUE TO TIE PRESURE (PLOT PURPOSES)*
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
TIEP = 0.0D0

!*THE METHOD USED TO SOLVE POISSON EQUATION IS COMPATIBILITY THROUGH
! REGULARIZATION, THIS VALUE IS JUST FOR PLOTTING PURPOSES, GIVE A VALUE
! TO TIE PRESURE IN THE BOTTOM LEFT CORNER, AND YOU WILL BE HAVE THE
! PRESURE PLOT TIED RELATIVELY TO THAT VALUE
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! WRITING TIME INTERVAL (DOUBLE)
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
WTIME = 1.0D0

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! TOP BOUNDARY CONDITION FILE
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
! IS THE BOUNDARY CONDITION GIVEN? (.TRUE. OR .FALSE.), IF FALSE,
! DEFAULT U(TOP) = 1.0
!
ISBOUND = .FALSE.

! IF ISBOUND IS .TRUE. ENTER THE PATH TO LIQUID BOUNDARY FILE
! BE CAREFUL WITH THE IMPUT, LET THE WATER GO OUT
!
BOUNDFILE = './liquid/liquid_boundary.txt'

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! COMPUTATION CONTINUED
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
! IS THE COMPUTATION CONTINUED? (.TRUE. OR .FALSE.)
!
ISSTART = .TRUE.

! IF THE COMPUTATION IS CONTINUED, ENTER THE PATH TO THE INITIAL
! CONDITION FILE, BE CAREFUL, NX AND NY MUST BE THE SAME THAT IN
! PREVIOUS TIME
!
STARTFILE = './liquid/hot_start_cav.dat'
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! NOTE ABOUT BOUNDARY AND INITIAL CONDITION:
!
! IF A BOUNDARY FILE IS GIVEN BUT NOT A HOT START, THE INITIAL CONDITION
! IS A ZERO FIELD, WITH THE TOP BOUNDARY AT T=INITIAL TIME GIVEN IN THE
! BUNDARY CONDITION
!
! IF A INITIAL CONDITION IS GIVEN BUT NOT A BOUNDARY FILE, THE TOP
! BOUNDARY WILL BE SETTLED AT 1.0 
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! DEBUGGER OPTION (.TRUE. OR .FALSE)
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
DEBUG = .FALSE.
!

/

